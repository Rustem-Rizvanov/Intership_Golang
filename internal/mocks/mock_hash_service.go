// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/hash.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHashService is a mock of HashService interface.
type MockHashService struct {
	ctrl     *gomock.Controller
	recorder *MockHashServiceMockRecorder
}

// MockHashServiceMockRecorder is the mock recorder for MockHashService.
type MockHashServiceMockRecorder struct {
	mock *MockHashService
}

// NewMockHashService creates a new mock instance.
func NewMockHashService(ctrl *gomock.Controller) *MockHashService {
	mock := &MockHashService{ctrl: ctrl}
	mock.recorder = &MockHashServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHashService) EXPECT() *MockHashServiceMockRecorder {
	return m.recorder
}

// FindMD5Hash mocks base method.
func (m *MockHashService) FindMD5Hash(input string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindMD5Hash", input)
	ret0, _ := ret[0].(string)
	return ret0
}

// FindMD5Hash indicates an expected call of FindMD5Hash.
func (mr *MockHashServiceMockRecorder) FindMD5Hash(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindMD5Hash", reflect.TypeOf((*MockHashService)(nil).FindMD5Hash), input)
}
